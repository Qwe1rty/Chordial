syntax = "proto2";

option java_multiple_files = true;
option java_package = "replication";
option java_outer_classname = "ChordialRaftMessages";

import "replication/LogEntry.proto";
import "scalapb/scalapb.proto";

package chordial.replication;


message AppendEntriesRequest {

    option (scalapb.message).extends = "replication.RaftRequest";

    // Leader sends it's term and ID information for administrative purposes:
    // * the term so follower knows if leadership is valid
    // * the ID for write request routing
    required uint64 leader_term = 1;
    required string leader_id = 2;

    // Used to determine discrepancies from the leader's logs
    required uint64 prev_log_index = 3;
    required uint64 prev_log_term = 4;

    // Log entries to replicate. Left empty for heartbeats
    repeated LogEntry entries = 5;

    // The index that specifies the entries that have been successfully
    // committed by a majority
    required uint64 leader_commit_index = 6;
}

message AppendEntriesResult {

    option (scalapb.message).extends = "replication.RaftResult";

    // Returns the follower's current term
    required uint64 current_term = 1;

    // Indicates whether entries have been accepted for commits by this
    // follower
    required bool success = 2;
}

message RequestVoteRequest {

    option (scalapb.message).extends = "replication.RaftRequest";

    // Candidate sends it's term and ID information for administrative purposes:
    // * the term so other nodes can figure whether candidate deserves vote
    // * the ID so candidate can be disambiguated
    required uint64 candidate_term = 1;
    required string candidate_id = 2;

    // Candidate's last log index + term is used as a unique compound identifier
    // for determining the candidate's up-to-dateness
    required uint64 last_log_index = 3;
    required uint64 last_log_term = 4;
}

message RequestVoteResult {

    option (scalapb.message).extends = "replication.RaftResult";

    // Returns the follower's current term
    required uint64 current_term = 1;

    // Indicates whether the candidate has received the follower's vote
    required bool vote_given = 2;
}

