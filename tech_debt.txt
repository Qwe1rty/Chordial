TODO LIST:

GENERAL:
- Formalize the "tag" pattern when making logs from a duplicate actor
- Configure the logging backend to be async?
- Some form of proper environment variable/configuration/dependency injection
- Document everything both in the code and on Github
- Convert usages of the "String" type for hashes into "Digest"

SERVICE:
- Replace the ActorMaterializer instance with the system wide one
- Reorganize service layer so its initialization in Chordial.class matches the others
- Reorganize the templating of the different request types, so that RequestServiceActor isn't
  responsible for the different request types and their handling
- Encapsulate the promise/future tie-in so that the .flatten doesn't need to be there

PERSISTENCE:
- Change PersistenceActor map to some form of cache
  - Ensure that the file stream is closed upon eviction
- Allow for concurrent read access to the same key OR some type of manual caching
- Replace .get calls for the pendingRequest: Option[ActorRef] in KeyStateActor
- Formalize KeyStateActor to an actual state machine

MEMBERSHIP:
- Move the "Tick" publish semaphore to the ActorTimers trait
- Possibly allow for different seed node and self IP addresser methods

GOSSIP:
- Generally just improve the API payload specification

PARTITIONING:
- Eventually decouple the hash range join from the membership join through separate gossips

BUILD SETUP:
- Keep the ports configured in a central place (currently in code, makefile, & docker build)